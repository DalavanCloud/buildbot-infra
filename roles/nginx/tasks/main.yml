---
- name: install nginx package
  pkgng:
    name: nginx
    state: present
  environment: "{{ proxy_env }}"

# this seems to be needed, but not formally required, for nginx
- name: install pcre package
  pkgng:
    name: pcre
    state: present
  environment: "{{ proxy_env }}"

- name: Download acme.sh
  git: repo=https://github.com/Neilpang/acme.sh dest=/usr/local/src/acme.sh
  when: ssl


- name: Install acme.sh
  command: /usr/local/src/acme.sh/acme.sh --install
  args:
    creates: /root/.acme.sh/acme.sh
    chdir: /usr/local/src/acme.sh
  when: ssl


- name: make sure necessary configuration directories exist
  file:
    path: "{{ nginx_conf_dir }}/{{item}}"
    mode: "0755"
    state: directory
  with_items:
  - conf.d
  - sites

- name: make sure log directory exists
  file:
    path: "{{ item }}"
    mode: "0755"
    state: directory
  with_items:
  - "{{ nginx_log_dir }}"
  - "{{ nginx_log_dir }}/{{ server_name }}"

- name: make sure spool exists
  file:
    path: "{{ nginx_spool_dir }}"
    mode: "0755"
    state: directory
    owner: "www"
    group: "www"

- name: install server configuration file
  template:
    src: "{{ nginx_template }}"
    dest: "{{ nginx_conf_dir }}/sites/{{ server_name }}"
  notify: reload nginx


- name: create DHE parameter file
  command: "/usr/bin/openssl dhparam -out {{ nginx_conf_dir }}/dhparam.pem 2048"
  args:
    creates: "{{ nginx_conf_dir }}/dhparam.pem"

- name: set permissions on DHE parameter file
  file:
    path: "{{ nginx_conf_dir }}/dhparam.pem"
    mode: 0600
    owner: root
    group: wheel

- name: install nginx.conf
  template:
    src: "nginx.conf"
    dest: "{{ nginx_conf_dir }}/nginx.conf"
  notify: reload nginx

- name: install ssl configuration file
  template:
    src: "ssl.conf"
    dest: "{{ nginx_conf_dir }}/conf.d/ssl.conf"
  notify: reload nginx

- name: enable and start nginx service
  service:
    name: nginx
    enabled: true
    state: started

- name: Issue the certificate
  command: "/root/.acme.sh/acme.sh --nginx --issue -d {{server_name}}"
  args:
    chdir: /root/.acme.sh
    creates: "/root/.acme.sh/{{server_name}}"
  when: ssl

- name: Install the certificate
  command: |
             /root/.acme.sh/acme.sh --install-cert -d {{server_name}} \
             --key-file {{ nginx_cert_dir }}/{{server_name}}.key  \
             --fullchain-file {{ nginx_cert_dir }}/{{server_name}}.crt \
             --reloadcmd "service nginx reload"
  when: ssl
