---
- name: create jail
  command: "ezjail-admin create -f {{ ezjail_default_flavour }} {{ name }} {{ ip_address|join(',') }}"
  args:
    creates: "{{ ezjail_conf_dir }}/{{ name }}"
  register: jail_created

- name: set jail's hostname
  lineinfile:
    dest: "{{ ezjail_conf_dir }}/{{ name }}"
    regexp: "^export jail_{{ name }}_hostname="
    line: 'export jail_{{ name }}_hostname="{{ hostname }}"'
  when: jail_created|changed

- name: start jail for bootstrapping
  command: "ezjail-admin start {{ name }}"
  when: jail_created|changed

- name: prepare bootstrap script
  template:
    src: "templates/run-once"
    dest: "{{ ezjail_jaildir }}/{{ name }}/root/run-once"
    mode: "0700"
  when: jail_created|changed

- name: execute bootstrap script
  command: "jexec {{ name }} root/run-once"
  when: jail_created|changed
  register: debug

- name: print output of bootstrap script
  debug:
    var: debug.stdout_lines
  when: jail_debug

- name: remove bootstrap script
  file:
    path: "{{ ezjail_jaildir }}/{{ name }}/root/run-once"
    state: absent
  when: jail_created|changed

- name: check if the jail is running
  shell: "jls -j {{ name }} > /dev/null 2>&1"
  ignore_errors: True
  register: jail_running

- name: start the jail
  command: "ezjail-admin start {{ name }}"
  when: jail_running|failed

# vim:ts=2:sw=2:noai:nosi
